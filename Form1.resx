<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>